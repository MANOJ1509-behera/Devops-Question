## set -1
```
1. Check the current system load and CPU usage in Linux:
Use uptime, top, or htop to check system load and CPU usage.

2. Purpose of the top and htop commands:
Both are used to monitor system processes and resource usage. htop is a more user-friendly, interactive version of top.

3. Check memory usage on your Linux system:
Use free -h or top to view memory usage.

4. Write a shell script to back up files:
1. Example script: 
	#!/bin/bash
	cp -r /path/to/source/* /path/to/destination/

5. Purpose of the #!/bin/bash line at the beginning of a script:
This is called a shebang, indicating the script should be executed using the Bash shell.

6. Create variables in a shell script:
To create a variable, simply assign a value: variable_name="value". Refer to it as $variable_name.

7. Difference between apt-get, yum, and dnf:
	apt-get: Package manager for Debian-based systems.
	yum: Package manager for older RedHat-based systems.
	dnf: The newer package manager for RedHat-based systems, replacing yum.

8. Install a package in a Debian-based system and in a RedHat-based system:
Debian: sudo apt-get install package-name
RedHat: sudo yum install package-name or sudo dnf install package-name

9. Update all packages on a Linux system:
Debian: sudo apt-get update && sudo apt-get upgrade
RedHat: sudo yum update or sudo dnf update

10. Different types of file permissions in Linux:
Read (r): Permission to view the file content.
Write (w): Permission to modify the file.
Execute (x): Permission to execute the file.

11. Change the owner and group of a file in Linux:
Use chown owner:group file to change the file's owner and group.

12. Secure SSH connections in Linux:
Use SSH key-based authentication, disable root login, and use a strong passphrase.

13. Where are system logs stored in Linux:
Logs are stored in the /var/log/ directory, with files like /var/log/syslog, /var/log/auth.log, etc.

14. View logs in real-time:
Use tail -f /var/log/syslog to view logs as they are written.

15. Search for a specific event in system logs:
Use grep to search, for example: grep "event" /var/log/syslog to search for the event in syslog.


```
## set - 2

```
1. **Explain the Linux boot process.** 

 The BIOS loads the bootloader (like GRUB), which loads the kernel. The kernel initializes hardware, mounts the root filesystem, and starts `init` or `systemd`, loading system services and setting the default runlevel or target.

2. **How would you troubleshoot a slow server?** 

 Check system resources (`top`, `vmstat`, `free`) for CPU, memory, or I/O issues. Review disk usage (`df`, `du`) and network traffic (`netstat`, `ss`). Identify resource-heavy processes and adjust configurations, terminate processes, or consider hardware upgrades.

3. **Describe Linux file permissions and how to change them.** 

 Permissions include read, write, and execute for the owner, group, and others. Use `chmod` to modify permissions (e.g., `chmod 755 filename`), `chown` to change ownership, and `chgrp` to change the group.

4. **What is LVM, and how do you manage it?** 

 LVM (Logical Volume Manager) enables flexible disk management across physical volumes. Commands include `pvcreate` (create physical volume), `vgcreate` (create volume group), `lvcreate` (create logical volume), and `lvextend`/`lvreduce` for resizing.

5. **How do you secure a Linux server?** 

 Disable unnecessary services, configure `iptables`/`firewalld`, enforce SSH security (disable root login, use SSH keys), enable SELinux/AppArmor, apply patches, monitor logs, and use Fail2ban for brute-force prevention.

6. **How do you manage services in Linux?** 

 Use `systemctl` for `systemd` services (`systemctl start service`, `systemctl enable service`). On older systems, use `service` or `init.d` scripts.

7. **How do you add a user and manage permissions?** 

 Use `useradd username` and `passwd username` to add users. Add users to groups with `usermod -aG groupname username`. Adjust file permissions with `chmod` and `chown`.

8. **How do you monitor server performance?** 

 Use `top` or `htop` for real-time monitoring, `sar` for historical data, `iostat` for I/O stats, and `netstat` or `ss` for network connections. Monitor load average, keeping it below the number of CPU cores.

9. **What steps would you take for filesystem corruption recovery?** 

 Boot into single-user mode or use a live CD, run `fsck` to repair, and restore from backups if needed. Regular backups are essential for data protection.

10. **How do you automate tasks in Linux?** 

 Use `cron` for scheduled tasks (`crontab -e`). For complex automation, use shell scripts and tools like `Ansible` or `Puppet` for consistent deployments across servers.

```
